import{_ as g}from"./chunks/ArticleMetadata.DArXzXOG.js";import{_ as D,m as y,a as C,u as p,B as e,e as s,x as t,ai as A,o as h,p as r,q as d,bo as o,bp as c,bq as B,br as F,bs as E,bt as u,bu as m}from"./chunks/framework.DGhdORX1.js";import"./chunks/theme.C7H76Bwr.js";const L=JSON.parse('{"title":"联合身份认证-微信登录","description":"","frontmatter":{"title":"联合身份认证-微信登录","author":"vains","date":"2024-05-05 13:00","isTop":"fasle","categories":["认证服务集成"],"tags":["Spring Boot","Spring Security","Spring Security OAuth2 Client","Spring OAuth2 Authorization Server"],"showComment":false},"headers":[],"relativePath":"authorization-server/05-联合身份认证/02-wechat-federation.md","filePath":"authorization-server/05-联合身份认证/02-wechat-federation.md","lastUpdated":null}'),q={name:"authorization-server/05-联合身份认证/02-wechat-federation.md"},v=s("h1",{id:"前言",tabindex:"-1"},[t("前言 "),s("a",{class:"header-anchor",href:"#前言","aria-label":'Permalink to "前言"'},"​")],-1),b=s("p",null,[t("微信登录使用需要进行资质认证，虽然公众平台提供了测试号，但是测试号只能用在微信浏览器打开的网页中使用，如果将测试号用于扫码登录，则会提示scope参数错误；虽然微信登录的流程也是oauth的那一套流程，但是它要求的参数并不符合oauth的规范，所以想要集成进联合身份认证中则需要根据参数要求进行定制。"),s("strong",null,[s("a",{href:"https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login",target:"_blank",rel:"noreferrer"},"微信公众平台测试号申请地址")]),s("br"),t("接下来就该展示本人的三板斧了，理论、编码、测试。")],-1),R=s("p",null,[s("strong",null,"如果不想看分析可以直接拉至中间的代码部分")],-1),_=s("h1",{id:"定制分析",tabindex:"-1"},[t("定制分析 "),s("a",{class:"header-anchor",href:"#定制分析","aria-label":'Permalink to "定制分析"'},"​")],-1),T=A('<p>首先，打开<a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html" target="_blank" rel="noreferrer">网页授权</a>的文档看一下微信登录并获取用户信息的流程，咱们根据文档一步步分析怎么去改造项目以适配微信登录</p><p><img src="'+o+'" alt="微信登录并获取用户信息的流程"></p><h2 id="第一步-中用户同意授权获取code" tabindex="-1">第一步：中用户同意授权获取code <a class="header-anchor" href="#第一步-中用户同意授权获取code" aria-label="Permalink to &quot;第一步：中用户同意授权获取code&quot;">​</a></h2><p>参数列表(摘抄自微信登录文档)</p><table><thead><tr><th>参数</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr><td>appid</td><td>是</td><td>公众号的唯一标识</td></tr><tr><td>redirect_uri</td><td>是</td><td>授权后重定向的回调链接地址， 请使用 urlEncode 对链接进行处理</td></tr><tr><td>response_type</td><td>是</td><td>返回类型，请填写code</td></tr><tr><td>scope</td><td>是</td><td>应用授权作用域，snsapi_base （不弹出授权页面，直接跳转，只能获取用户openid），snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。并且， 即使在未关注的情况下，只要用户授权，也能获取其信息 ）</td></tr><tr><td>state</td><td>否</td><td>重定向后会带上state参数，开发者可以填写a-zA-Z0-9的参数值，最多128字节</td></tr><tr><td>#wechat_redirect</td><td>是</td><td>无论直接打开还是做页面302重定向时候，必须带此参数</td></tr><tr><td>forcePopup</td><td>否</td><td>强制此次授权需要用户弹窗确认；默认为false；需要注意的是，若用户命中了特殊场景下的静默授权逻辑，则此参数不生效</td></tr></tbody></table><p>      参数中有一个appid的参数，这个参数的意思是跟client_id是一样的，但是名字是叫appid，如果直接用OAuth2 Client根据这些参数登录的话是走不下去的，因为OAuth2 Client不会带appid参数，只会带client_id参数，所以这时候就要在跳转至请求授权页面之前修改授权申请的参数。<br></p><p>      去<a href="https://docs.spring.io/spring-security/reference/servlet/oauth2/client/authorization-grants.html#_customizing_the_authorization_request" target="_blank" rel="noreferrer">Security OAuth2 Client文档</a>中找一下相关配置，发现文档中明确指出了自定义授权请求的配置，并给出了一个简单的示例，如下所示：</p><p><img src="'+c+'" alt="Security OAuth2 Client自定义授权申请示例代码"> 根据文档可知需要自定义一个<code>AuthorizationRequestResolver</code>来适配微信登录中的获取code</p><h2 id="第二步-通过code换取网页授权access-token" tabindex="-1">第二步：通过code换取网页授权access_token <a class="header-anchor" href="#第二步-通过code换取网页授权access-token" aria-label="Permalink to &quot;第二步：通过code换取网页授权access_token&quot;">​</a></h2><p>参数列表(摘抄自微信登录文档)</p><table><thead><tr><th>参数</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr><td>appid</td><td>是</td><td>公众号的唯一标识</td></tr><tr><td>secret</td><td>是</td><td>公众号的appsecret</td></tr><tr><td>code</td><td>是</td><td>填写第一步获取的code参数</td></tr><tr><td>grant_type</td><td>是</td><td>填写为authorization_code</td></tr></tbody></table><p>跟上一步一样，clientid需要改为appid，client_secret需要改为secret，继续去文档上找一下相关配置，文档中是有相关自定义请求access_token配置，详见<a href="https://docs.spring.io/spring-security/reference/servlet/oauth2/client/authorization-grants.html#_customizing_the_access_token_request" target="_blank" rel="noreferrer">Customizing the Access Token Request</a>，根据文档的说明可知需要自定义一个<code>CodeGrantRequestEntityConverter</code>来适配微信登录根据code获取access_token</p><p><img src="'+B+'" alt="image.png"> 响应参数列表</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>access_token</td><td>网页授权接口调用凭证,注意：此access_token与基础支持的access_token不同</td></tr><tr><td>expires_in</td><td>access_token接口调用凭证超时时间，单位（秒）</td></tr><tr><td>refresh_token</td><td>用户刷新access_token</td></tr><tr><td>openid</td><td>用户唯一标识</td></tr><tr><td>scope</td><td>用户授权的作用域，使用逗号（,）分隔</td></tr></tbody></table><p>在这里放响应参数列表是因为它响应的数据跟框架需要的数据格式不一样，相较于标准响应多了一个openid，少了一个token_type，框架会自动将多出来的响应数据放入<code>additionalParameters</code>属性中，但是少的<code>tokenType</code>属性需要给一个默认的type，所以这里要给以自定义的转换类；同时也因为在获取用户信息时需要带上openid这个属性值。</p><p><strong>刷新token部分如果需要的话可以去了解一下</strong></p><h2 id="第三步-拉取用户信息-需scope为-snsapi-userinfo" tabindex="-1">第三步：拉取用户信息(需scope为 snsapi_userinfo) <a class="header-anchor" href="#第三步-拉取用户信息-需scope为-snsapi-userinfo" aria-label="Permalink to &quot;第三步：拉取用户信息(需scope为 snsapi_userinfo)&quot;">​</a></h2><p>参数列表(摘抄自微信登录文档)</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>access_token</td><td>网页授权接口调用凭证,注意：此access_token与基础支持的access_token不同</td></tr><tr><td>openid</td><td>用户的唯一标识</td></tr><tr><td>lang</td><td>返回国家地区语言版本，zh_CN 简体，zh_TW 繁体，en 英语</td></tr></tbody></table><p>正如上一步句尾说的，要携带openid发起请求，并且要携带access_token参数，默认access_token是放在请求头中的，格式为：Authorization: token_type access_token，这里也要修改一下携带方式，如果看过上一篇文章的读者应该还记得我们是自己重写OAuth2UserService，文档中关于该类的描述中也提到了在请求用户信息之前的配置，需要提供一个<code>RequestEntityConverter</code>并通过OAuth2UserService的<code>setRequestEntityConverter</code>设置进去，详见<a href="https://docs.spring.io/spring-security/reference/servlet/oauth2/login/advanced.html#oauth2login-advanced-oauth2-user-service" target="_blank" rel="noreferrer">文档</a>；所以这里也要提供一个<code>RequestEntityConverter</code>并添加至自定义OAuth2UserService中。</p><p><img src="'+F+'" alt="image.png"></p><p><strong>你以为这就完了吗？ Of course not!!! 框架在解析响应体的时候会根据content-type去解析，框架只会将application/json的mediaType解析为bean，不管是获取token还是获取用户信息的请求，框架都是用restTemplate发起请求，并且指定了响应数据的java类，以上提到的所有接口，除了获取code是重定向，其它都有响应，恶心的是微信响应回来的content-type是text/plain，框架会因为找不到解析的类型从而抛出异常，所以还要配置一下，让框架也解析text/plain数据。</strong></p><p><strong>在之前的文章中虽然本人自定义了很多内容，但是关于授权端点的请求与响应都没有去修改，用户信息接口直接返回了用户信息类，没有返回一个统一响应类的原因就在这里，如果修改了这些东西，那么等你将服务提供出去以后对接方会异常痛苦，并且可能边对接边骂(没错，正是在下)，相对于标准oauth2协议对接起来实在是太痛苦了。要牢记Spring Boot的“约定大于配置”。</strong></p><h1 id="编码部分" tabindex="-1">编码部分 <a class="header-anchor" href="#编码部分" aria-label="Permalink to &quot;编码部分&quot;">​</a></h1>',24),f=A(`<p>根据上边的分析发现，对接微信登录需要从头改到尾，授权申请、用code换取token和用token获取用户信息都要修改。</p><h2 id="编码内容" tabindex="-1">编码内容 <a class="header-anchor" href="#编码内容" aria-label="Permalink to &quot;编码内容&quot;">​</a></h2><ol><li>编写<code>WechatAuthorizationRequestConsumer</code>类，授权申请接口携带的参数。</li><li>编写<code>WechatCodeGrantRequestEntityConverter</code>类，修改code换取access_token时携带的参数。</li><li>编写<code>WechatMapAccessTokenResponseConverter</code>类，根据响应数据生成<code>OAuth2AccessTokenResponse</code>类的实例。</li><li>编写<code>WechatUserRequestEntityConverter</code>类，修改请求用户信息的参数。</li><li>编写<code>WechatUserResponseConverter</code>类，让框架可以解析“text/plain”响应信息。</li><li>将上边的类添加至配置中，使其生效。</li><li>用户信息处理策略添加<code>WechatUserConverter</code>类，使其解析微信用户信息。</li><li>yml中添加微信应用配置信息。</li><li>登录页面添加微信登录入口。</li></ol><h2 id="在com-example-authorization-wechat包中添加wechatauthorizationrequestconsumer类" tabindex="-1">在<code>com.example.authorization.wechat</code>包中添加<code>WechatAuthorizationRequestConsumer</code>类 <a class="header-anchor" href="#在com-example-authorization-wechat包中添加wechatauthorizationrequestconsumer类" aria-label="Permalink to &quot;在\`com.example.authorization.wechat\`包中添加\`WechatAuthorizationRequestConsumer\`类&quot;">​</a></h2><p>判断是否微信登录，如果是微信登录则将appid添加至请求参数中</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * 自定义微信登录认证请求</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@author</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> vains</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> WechatAuthorizationRequestConsumer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> Consumer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">OAuth2AuthorizationRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Builder</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> accept</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(OAuth2AuthorizationRequest.Builder </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">builder</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        OAuth2AuthorizationRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> authorizationRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> builder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> registrationId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> authorizationRequest.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(OAuth2ParameterNames.REGISTRATION_ID);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (Objects.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(registrationId, THIRD_LOGIN_WECHAT)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            // 判断是否微信登录，如果是微信登录则将appid添加至请求参数中</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            builder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">additionalParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">((params) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> params.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(WECHAT_PARAMETER_FORCE_POPUP, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            builder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">additionalParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">((params) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> params.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(WECHAT_PARAMETER_APPID, authorizationRequest.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getClientId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="在com-example-authorization-wechat包中添加wechatcodegrantrequestentityconverter类" tabindex="-1">在<code>com.example.authorization.wechat</code>包中添加<code>WechatCodeGrantRequestEntityConverter</code>类 <a class="header-anchor" href="#在com-example-authorization-wechat包中添加wechatcodegrantrequestentityconverter类" aria-label="Permalink to &quot;在\`com.example.authorization.wechat\`包中添加\`WechatCodeGrantRequestEntityConverter\`类&quot;">​</a></h2><p>如果是微信登录，获取token时携带appid参数与secret参数</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * 微信登录请求token入参处理类</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@author</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> vains</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> WechatCodeGrantRequestEntityConverter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> OAuth2AuthorizationCodeGrantRequestEntityConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    protected</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> MultiValueMap&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">createParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(OAuth2AuthorizationCodeGrantRequest </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">authorizationCodeGrantRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 如果是微信登录，获取token时携带appid参数与secret参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        MultiValueMap</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">parameters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> super</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">createParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(authorizationCodeGrantRequest);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> registrationId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> authorizationCodeGrantRequest.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getClientRegistration</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getRegistrationId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (THIRD_LOGIN_WECHAT.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(registrationId)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            // 如果当前是微信登录，携带appid和secret</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            parameters.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(WECHAT_PARAMETER_APPID, authorizationCodeGrantRequest.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getClientRegistration</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getClientId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            parameters.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(WECHAT_PARAMETER_SECRET, authorizationCodeGrantRequest.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getClientRegistration</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getClientSecret</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> parameters;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="在com-example-authorization-wechat包中添加wechatmapaccesstokenresponseconverter类" tabindex="-1">在<code>com.example.authorization.wechat</code>包中添加<code>WechatMapAccessTokenResponseConverter</code>类 <a class="header-anchor" href="#在com-example-authorization-wechat包中添加wechatmapaccesstokenresponseconverter类" aria-label="Permalink to &quot;在\`com.example.authorization.wechat\`包中添加\`WechatMapAccessTokenResponseConverter\`类&quot;">​</a></h2><p>这个类逻辑是默认的DefaultMapOAuth2AccessTokenResponseConverter类中的逻辑，唯一的改动就是在token type为空时给个默认值</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * 微信登录获取token的响应处理类</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@author</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> vains</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> WechatMapAccessTokenResponseConverter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> Converter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;Map&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">OAuth2AccessTokenResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Set</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">TOKEN_RESPONSE_PARAMETER_NAMES</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> HashSet&lt;&gt;(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            Arrays.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">asList</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(OAuth2ParameterNames.ACCESS_TOKEN, OAuth2ParameterNames.EXPIRES_IN,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    OAuth2ParameterNames.REFRESH_TOKEN, OAuth2ParameterNames.SCOPE, OAuth2ParameterNames.TOKEN_TYPE));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> OAuth2AccessTokenResponse </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">convert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(Map&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">source</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> accessToken</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> getParameterValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(source, OAuth2ParameterNames.ACCESS_TOKEN);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        OAuth2AccessToken</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">TokenType</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> accessTokenType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> getAccessTokenType</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(source);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        long</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> expiresIn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> getExpiresIn</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(source);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        Set</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">scopes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> getScopes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(source);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> refreshToken</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> getParameterValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(source, OAuth2ParameterNames.REFRESH_TOKEN);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        Map</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">additionalParameters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> LinkedHashMap&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (Map</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Entry</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">entry</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> source.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">entrySet</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">TOKEN_RESPONSE_PARAMETER_NAMES.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(entry.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">())) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                additionalParameters.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(entry.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), entry.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> OAuth2AccessTokenResponse.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">withToken</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(accessToken)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">                // 如果token type为空，给个默认值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">tokenType</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(accessTokenType </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ?</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> OAuth2AccessToken.TokenType.BEARER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> accessTokenType)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">expiresIn</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(expiresIn)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">scopes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(scopes)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">refreshToken</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(refreshToken)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">additionalParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(additionalParameters)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> OAuth2AccessToken.TokenType </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getAccessTokenType</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(Map&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">tokenResponseParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (OAuth2AccessToken.TokenType.BEARER.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">equalsIgnoreCase</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getParameterValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(tokenResponseParameters, OAuth2ParameterNames.TOKEN_TYPE))) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> OAuth2AccessToken.TokenType.BEARER;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> long</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> getExpiresIn</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(Map&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">tokenResponseParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> getParameterValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(tokenResponseParameters, OAuth2ParameterNames.EXPIRES_IN, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0L</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Set&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getScopes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(Map&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">tokenResponseParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (tokenResponseParameters.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">containsKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(OAuth2ParameterNames.SCOPE)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> scope</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> getParameterValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(tokenResponseParameters, OAuth2ParameterNames.SCOPE);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> HashSet&lt;&gt;(Arrays.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">asList</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(StringUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">delimitedListToStringArray</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(scope, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot; &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Collections.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">emptySet</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> String </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getParameterValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(Map&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">tokenResponseParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, String </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">parameterName</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> tokenResponseParameters.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(parameterName);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (obj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> long</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> getParameterValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(Map&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">tokenResponseParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, String </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">parameterName</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                                          long</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> defaultValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        long</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> parameterValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> defaultValue;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> tokenResponseParameters.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(parameterName);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (obj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            // Final classes Long and Integer do not need to be coerced</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getClass</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Long.class) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                parameterValue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (Long) obj;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getClass</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Integer.class) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                parameterValue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (Integer) obj;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            else</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">                // Attempt to coerce to a long (typically from a String)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                try</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    parameterValue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Long.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">parseLong</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (NumberFormatException </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">ignored</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> parameterValue;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="在com-example-authorization-wechat包中添加wechatuserrequestentityconverter类" tabindex="-1">在<code>com.example.authorization.wechat</code>包中添加<code>WechatUserRequestEntityConverter</code>类 <a class="header-anchor" href="#在com-example-authorization-wechat包中添加wechatuserrequestentityconverter类" aria-label="Permalink to &quot;在\`com.example.authorization.wechat\`包中添加\`WechatUserRequestEntityConverter\`类&quot;">​</a></h2><p>对于微信登录的特殊处理，请求用户信息时添加openid与access_token参数</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * 微信登录获取用户信息参数转换器</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@author</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> vains</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> WechatUserRequestEntityConverter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> OAuth2UserRequestEntityConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> RequestEntity&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">convert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(OAuth2UserRequest </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">userRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 获取配置文件中的客户端信息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        ClientRegistration</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> clientRegistration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> userRequest.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getClientRegistration</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (THIRD_LOGIN_WECHAT.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(clientRegistration.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getRegistrationId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">())) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            // 对于微信登录的特殊处理，请求用户信息时添加openid与access_token参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> openid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> userRequest.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getAdditionalParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(WECHAT_PARAMETER_OPENID);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            URI</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> uri</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> UriComponentsBuilder</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">fromUriString</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(clientRegistration.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getProviderDetails</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getUserInfoEndpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getUri</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">queryParam</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(WECHAT_PARAMETER_OPENID, openid)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">queryParam</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(OAuth2ParameterNames.ACCESS_TOKEN, userRequest.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getAccessToken</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getTokenValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">toUri</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> RequestEntity&lt;&gt;(HttpMethod.GET, uri);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> super</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">convert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(userRequest);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="在com-example-authorization-wechat包中添加wechatuserresponseconverter类" tabindex="-1">在<code>com.example.authorization.wechat</code>包中添加<code>WechatUserResponseConverter</code>类 <a class="header-anchor" href="#在com-example-authorization-wechat包中添加wechatuserresponseconverter类" aria-label="Permalink to &quot;在\`com.example.authorization.wechat\`包中添加\`WechatUserResponseConverter\`类&quot;">​</a></h2><p>微信获取用户信息时响应的类型为“text/plain”，这里特殊处理一下</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * 微信用户信息响应转换器</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@author</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> vains</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> WechatUserResponseConverter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> MappingJackson2HttpMessageConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> WechatUserResponseConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        List</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">MediaType</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mediaTypes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ArrayList&lt;&gt;(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">super</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getSupportedMediaTypes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 微信获取用户信息时响应的类型为“text/plain”，这里特殊处理一下</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        mediaTypes.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(MediaType.TEXT_PLAIN);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        super</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setSupportedMediaTypes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(mediaTypes);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="将上边的类添加至配置中-使其生效" tabindex="-1">将上边的类添加至配置中，使其生效 <a class="header-anchor" href="#将上边的类添加至配置中-使其生效" aria-label="Permalink to &quot;将上边的类添加至配置中，使其生效&quot;">​</a></h2><h3 id="authorizationconfig类的配置" tabindex="-1">AuthorizationConfig类的配置 <a class="header-anchor" href="#authorizationconfig类的配置" aria-label="Permalink to &quot;AuthorizationConfig类的配置&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">     * 配置认证相关的过滤器链(资源服务，客户端配置)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">     *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> http</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> spring security核心配置类</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@return</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> 过滤器链</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@throws</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Exception</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> 抛出</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">     */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Bean</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> SecurityFilterChain </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">defaultSecurityFilterChain</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(HttpSecurity http, ClientRegistrationRepository clientRegistrationRepository) throws Exception {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 添加跨域过滤器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">addFilter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">corsFilter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 禁用 csrf 与 cors</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">csrf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(AbstractHttpConfigurer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">disable);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">cors</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(AbstractHttpConfigurer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">disable);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">authorizeHttpRequests</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">((authorize) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> authorize</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">                        // 放行静态资源</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">requestMatchers</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/assets/**&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/webjars/**&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/login&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/getCaptcha&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/getSmsCaptcha&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">permitAll</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">anyRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">authenticated</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                )</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">                // 指定登录页面</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">formLogin</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(formLogin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                            formLogin.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">loginPage</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/login&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (UrlUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">isAbsoluteUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(LOGIN_URL)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">                                // 绝对路径代表是前后端分离，登录成功和失败改为写回json，不重定向了</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                                formLogin.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">successHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> LoginSuccessHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                                formLogin.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">failureHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> LoginFailureHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                );</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 添加BearerTokenAuthenticationFilter，将认证服务当做一个资源服务，解析请求头中的token</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">oauth2ResourceServer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">((resourceServer) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> resourceServer</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">jwt</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(Customizer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">withDefaults</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">accessDeniedHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(SecurityUtils</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">exceptionHandler)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">authenticationEntryPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(SecurityUtils</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">exceptionHandler)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        );</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 兼容前后端分离与不分离配置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (UrlUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">isAbsoluteUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(LOGIN_URL)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            http</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">                    // 当未登录时访问认证端点时重定向至login页面</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">exceptionHandling</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">((exceptions) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> exceptions</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">defaultAuthenticationEntryPointFor</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                                    new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> LoginTargetAuthenticationEntryPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(LOGIN_URL),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                                    new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> MediaTypeRequestMatcher</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(MediaType.TEXT_HTML)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                            )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 联合身份认证</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">oauth2Login</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(oauth2Login </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> oauth2Login</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">loginPage</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(LOGIN_URL)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">authorizationEndpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(authorization </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> authorization</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">authorizationRequestResolver</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">authorizationRequestResolver</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(clientRegistrationRepository))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">tokenEndpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(token </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> token</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">accessTokenResponseClient</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">accessTokenResponseClient</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 使用redis存储、读取登录的认证信息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">securityContext</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> context.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">securityContextRepository</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(redisSecurityContextRepository));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">     * AuthorizationRequest 自定义配置</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">     *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> clientRegistrationRepository</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> yml配置中客户端信息存储类</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@return</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> OAuth2AuthorizationRequestResolver</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> OAuth2AuthorizationRequestResolver </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">authorizationRequestResolver</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ClientRegistrationRepository clientRegistrationRepository) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        DefaultOAuth2AuthorizationRequestResolver</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> authorizationRequestResolver</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> DefaultOAuth2AuthorizationRequestResolver</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                        clientRegistrationRepository, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/oauth2/authorization&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 兼容微信登录授权申请</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        authorizationRequestResolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setAuthorizationRequestCustomizer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> WechatAuthorizationRequestConsumer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> authorizationRequestResolver;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">     * 适配微信登录适配，添加自定义请求token入参处理</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">     *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@return</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> OAuth2AccessTokenResponseClient accessToken响应信息处理</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> OAuth2AccessTokenResponseClient</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">OAuth2AuthorizationCodeGrantRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> accessTokenResponseClient</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        DefaultAuthorizationCodeTokenResponseClient</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> tokenResponseClient</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> DefaultAuthorizationCodeTokenResponseClient</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        tokenResponseClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setRequestEntityConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> WechatCodeGrantRequestEntityConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 自定义 RestTemplate，适配微信登录获取token</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        OAuth2AccessTokenResponseHttpMessageConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> messageConverter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> OAuth2AccessTokenResponseHttpMessageConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        List</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">MediaType</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mediaTypes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ArrayList&lt;&gt;(messageConverter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getSupportedMediaTypes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 微信获取token时响应的类型为“text/plain”，这里特殊处理一下</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        mediaTypes.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(MediaType.TEXT_PLAIN);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        messageConverter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setAccessTokenResponseConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> WechatMapAccessTokenResponseConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        messageConverter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setSupportedMediaTypes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(mediaTypes);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 初始化RestTemplate</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        RestTemplate</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> restTemplate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> RestTemplate</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(Arrays.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">asList</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> FormHttpMessageConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                messageConverter));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        restTemplate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setErrorHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> OAuth2ErrorResponseErrorHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        tokenResponseClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setRestOperations</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(restTemplate);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> tokenResponseClient;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span></code></pre></div><h3 id="customoauth2userservice改造" tabindex="-1"><code>CustomOauth2UserService</code>改造 <a class="header-anchor" href="#customoauth2userservice改造" aria-label="Permalink to &quot;\`CustomOauth2UserService\`改造&quot;">​</a></h3><p>移除类上的<code>@RequiredArgsConstructor</code>注解，自己实现构造方法，初始化时添加微信用户信息请求处理(oidcUserService本质上是调用该类获取用户信息的，不用添加)，设置用户信息转换器，获取微信用户信息时使其支持“text/plain”的Context-Type。添加异常处理，将异常信息放入session中，重定向至登录时可以获取到异常信息。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * 自定义三方oauth2登录获取用户信息服务</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@author</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> vains</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Service</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> CustomOauth2UserService</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> DefaultOAuth2UserService</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> IOauth2ThirdAccountService</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> thirdAccountService;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Oauth2UserConverterContext</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> userConverterContext;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> CustomOauth2UserService</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(IOauth2ThirdAccountService </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">thirdAccountService</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, Oauth2UserConverterContext </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">userConverterContext</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.thirdAccountService </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> thirdAccountService;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.userConverterContext </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> userConverterContext;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 初始化时添加微信用户信息请求处理，oidcUserService本质上是调用该类获取用户信息的，不用添加</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        super</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setRequestEntityConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> WechatUserRequestEntityConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 设置用户信息转换器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        RestTemplate</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> restTemplate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> RestTemplate</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        restTemplate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setErrorHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> OAuth2ErrorResponseErrorHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        List</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">HttpMessageConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt;&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">messageConverters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> List.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> StringHttpMessageConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(),</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">                // 获取微信用户信息时使其支持“text/plain”</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> WechatUserResponseConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> ResourceHttpMessageConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> ByteArrayHttpMessageConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> AllEncompassingFormHttpMessageConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        restTemplate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setMessageConverters</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(messageConverters);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        super</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setRestOperations</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(restTemplate);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> OAuth2User </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">loadUser</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(OAuth2UserRequest </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">userRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">throws</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> OAuth2AuthenticationException {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            OAuth2User</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> oAuth2User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> super</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">loadUser</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(userRequest);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            // 转为项目中的三方用户信息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            Oauth2ThirdAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> oauth2ThirdAccount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> userConverterContext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">convert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(userRequest, oAuth2User);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            // 检查用户信息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            thirdAccountService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">checkAndSaveUser</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(oauth2ThirdAccount);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            // 将loginType设置至attributes中</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            LinkedHashMap</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> LinkedHashMap&lt;&gt;(oAuth2User.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getAttributes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            // 将RegistrationId当做登录类型</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            attributes.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;loginType&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, userRequest.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getClientRegistration</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getRegistrationId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> userNameAttributeName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> userRequest.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getClientRegistration</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getProviderDetails</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getUserInfoEndpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getUserNameAttributeName</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> DefaultOAuth2User</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(oAuth2User.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getAuthorities</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), attributes, userNameAttributeName);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (Exception </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            // 获取当前request</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            RequestAttributes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> requestAttributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> RequestContextHolder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getRequestAttributes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (requestAttributes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> InvalidCaptchaException</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Failed to get the current request.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            HttpServletRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ((ServletRequestAttributes) requestAttributes).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            // 将异常放入session中</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            request.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getSession</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(Boolean.FALSE).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(WebAttributes.AUTHENTICATION_EXCEPTION, e);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> AuthenticationServiceException</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), e);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="用户信息处理策略添加wechatuserconverter类-使其解析微信用户信息" tabindex="-1">用户信息处理策略添加<code>WechatUserConverter</code>类，使其解析微信用户信息 <a class="header-anchor" href="#用户信息处理策略添加wechatuserconverter类-使其解析微信用户信息" aria-label="Permalink to &quot;用户信息处理策略添加\`WechatUserConverter\`类，使其解析微信用户信息&quot;">​</a></h2><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * 微信用户信息转换器</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@author</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> vains</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">RequiredArgsConstructor</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Component</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(THIRD_LOGIN_WECHAT)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> WechatUserConverter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> Oauth2UserConverterStrategy</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Oauth2ThirdAccount </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">convert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(OAuth2User </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">oAuth2User</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 获取三方用户信息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        Map</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> oAuth2User.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getAttributes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 转换至Oauth2ThirdAccount</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        Oauth2ThirdAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> thirdAccount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> Oauth2ThirdAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        thirdAccount.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setUniqueId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(String.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">valueOf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(attributes.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;openid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        thirdAccount.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setThirdUsername</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(oAuth2User.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getName</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        thirdAccount.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setType</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(THIRD_LOGIN_GITEE);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        thirdAccount.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setLocation</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(attributes.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;province&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot; &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> attributes.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;city&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 设置基础用户信息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        thirdAccount.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setName</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(oAuth2User.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getName</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        thirdAccount.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setAvatarUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(String.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">valueOf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(attributes.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;headimgurl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> thirdAccount;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="yml中添加微信应用配置信息" tabindex="-1">yml中添加微信应用配置信息 <a class="header-anchor" href="#yml中添加微信应用配置信息" aria-label="Permalink to &quot;yml中添加微信应用配置信息&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  datasource</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    driver-class-name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    url</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">jdbc:mysql://localhost:3306/authorization-example?serverTimezone=UTC&amp;userUnicode=true&amp;characterEncoding=utf-8</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    username</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">root</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    password</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">root</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  security</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    oauth2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      client</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">        registration</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">          # 这个&#39;gitee&#39;就是registrationId</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          gitee</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 指定oauth登录提供者，该oauth登录由provider中的gitee来处理</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            provider</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">gitee</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 客户端名字</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            client-name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">Sign in with Gitee</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 认证方式</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            authorization-grant-type</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">authorization_code</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 客户端id，使用自己的gitee的客户端id</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            client-id</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 客户端秘钥，使用自己的gitee的客户端秘钥</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            client-secret</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 回调地址</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            redirect-uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">http://192.168.1.102:8080/login/oauth2/code/gitee</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 申请scope列表</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            scope</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">              - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">emails</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">              - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">projects</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          github</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # security client默认实现了GitHub提供的oauth2登录</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            provider</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">github</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            client-id</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            client-secret</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          wechat</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 微信登录配置</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            provider</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">wechat</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 客户端名字</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            client-name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">Sign in with WeChat</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 认证方式</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            authorization-grant-type</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">authorization_code</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 客户端id，使用自己的微信的appid</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            client-id</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 客户端秘钥，使用自己的微信的app secret</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            client-secret</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 回调地址，设置为认证服务的回调地址，由认证服务用code换取token</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            redirect-uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">http://192.168.1.102:8080/login/oauth2/code/wechat</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 申请scope列表</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            scope</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">snsapi_userinfo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        # oauth登录提供商</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">        provider</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">          # 微信的OAuth2端点配置</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          wechat</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 设置用户信息响应体中账号的字段</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            user-name-attribute</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">nickname</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 获取token的地址</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            token-uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">https://api.weixin.qq.com/sns/oauth2/access_token</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 获取用户信息的地址</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            user-info-uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">https://api.weixin.qq.com/sns/userinfo</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 发起授权申请的地址</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            authorization-uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">https://open.weixin.qq.com/connect/oauth2/authorize</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">          # gitee的OAuth2端点配置</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          gitee</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 设置用户信息响应体中账号的字段</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            user-name-attribute</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">login</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 获取token的地址</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            token-uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">https://gitee.com/oauth/token</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 获取用户信息的地址</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            user-info-uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">https://gitee.com/api/v5/user</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 发起授权申请的地址</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            authorization-uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">https://gitee.com/oauth/authorize</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          github</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            user-name-attribute</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">login</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Mybatis-Plus 配置</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">mybatis-plus</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # 扫描mapper文件</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  mapper-locations</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">classpath:com/vains/mapper/xml/*Mapper.xml</span></span></code></pre></div><h2 id="登录页面添加微信登录入口" tabindex="-1">登录页面添加微信登录入口 <a class="header-anchor" href="#登录页面添加微信登录入口" aria-label="Permalink to &quot;登录页面添加微信登录入口&quot;">​</a></h2><p>将上期的按钮改成图标了，<strong>重点的是点击微信登录按钮后要让请求跳转至<code>/oauth2/authorization/wechat</code>，wechat就是上边yml中微信应用的registrationId，这里要注意对应上</strong></p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;third-box&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/oauth2/authorization/gitee&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Gitee登录&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">svg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> width</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;32&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> height</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;32&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> xmlns</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;http://www.w3.org/2000/svg&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;zi_tmGitee&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;">             viewBox</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;0 0 2000 2000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> fill</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;red&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;">                  d</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;M898 1992q183 0 344-69.5t283-191.5q122-122 191.5-283t69.5-344q0-183-69.5-344T1525 477q-122-122-283-191.5T898 216q-184 0-345 69.5T270 477Q148 599 78.5 760T9 1104q0 183 69.5 344T270 1731q122 122 283 191.5t345 69.5zm199-400H448q-17 0-30.5-14t-13.5-30V932q0-89 43.5-163.5T565 649q74-45 166-45h616q17 0 30.5 14t13.5 31v111q0 16-13.5 30t-30.5 14H731q-54 0-93.5 39.5T598 937v422q0 17 14 30.5t30 13.5h416q55 0 94.5-39.5t39.5-93.5v-22q0-17-14-30.5t-31-13.5H842q-17 0-30.5-14t-13.5-31v-111q0-16 13.5-30t30.5-14h505q17 0 30.5 14t13.5 30v250q0 121-86.5 207.5T1097 1592z&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">svg</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/oauth2/authorization/github&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;GitHub登录&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> width</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;36&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;margin-right: 5px;&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> alt</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Sign in with GitHub&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;">             src</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/oauth2/authorization/wechat&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;GitHub登录&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> width</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;28&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;margin-right: 5px; position: static;&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> alt</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Sign in with GitHub&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;">             src</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;./assets/img/wechat_login.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span></code></pre></div><h2 id="补充" tabindex="-1">补充 <a class="header-anchor" href="#补充" aria-label="Permalink to &quot;补充&quot;">​</a></h2><h3 id="securityconstants常量类中的常量" tabindex="-1"><code>SecurityConstants</code>常量类中的常量 <a class="header-anchor" href="#securityconstants常量类中的常量" aria-label="Permalink to &quot;\`SecurityConstants\`常量类中的常量&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * 微信登录相关参数——openid：用户唯一id</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> WECHAT_PARAMETER_OPENID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;openid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * 微信登录相关参数——forcePopup：强制此次授权需要用户弹窗确认</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> WECHAT_PARAMETER_FORCE_POPUP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;forcePopup&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * 微信登录相关参数——secret：微信的应用秘钥</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> WECHAT_PARAMETER_SECRET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;secret&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * 微信登录相关参数——appid：微信的应用id</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> WECHAT_PARAMETER_APPID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;appid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> * 三方登录类型——微信</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> THIRD_LOGIN_WECHAT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;wechat&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><p><strong>到此为止编码部分就完成了，微信登录的图标可以去gitee上取一下或者自己找一下就行，代码仓库地址在最后的附录中。</strong></p><h1 id="微信测试号配置简要说明" tabindex="-1">微信测试号配置简要说明 <a class="header-anchor" href="#微信测试号配置简要说明" aria-label="Permalink to &quot;微信测试号配置简要说明&quot;">​</a></h1>`,36),O=A('<p><strong>微信应用配置中appid和app secret大家用自己的，如果没有认证资质也可以像作者这样去申请一个微信测试号去测试，因为这里限制了只有关注了测试公众号才可以使用，最多只能关注100个，所以大家去申请一个测试就ok。</strong><br> 下边我会放一下测试号的截图，要是真想用可以关注下测试号(有回调地址的限制)</p><table><thead><tr><th>key</th><th>value</th></tr></thead><tbody><tr><td>appID</td><td>wx946ad2f955901214</td></tr><tr><td>appsecret</td><td>e4635ff2ed22c83294394ac818cf75a7</td></tr></tbody></table><p><img src="'+E+'" alt="测试号的appid 与 app secret"></p><p>测试号的二维码，扫描关注后才可使用 二维码违规，略</p><p><strong>重要：想让联合认证流程走下去要修改回调地址为认证服务器的地址</strong><br> 点击修改，在弹出的框内输入认证服务的地址 <img src="'+u+'" alt="配置回调地址入口"> 修改回调地址</p><p><img src="'+m+'" alt="修改回调地址"></p><h1 id="写在最后" tabindex="-1">写在最后 <a class="header-anchor" href="#写在最后" aria-label="Permalink to &quot;写在最后&quot;">​</a></h1>',7),S=s("p",null,[t("虽然这次是用测试号对接的，但是实际上开放平台提供的扫码登录也是这个流程，直接替换appid和app secret为开放平台申请的应该能直接使用；另外需要注意的是获取access_token时可能会返回"),s("code",null,"unionid"),t("，这是在同一个微信开放平台账号下拥有多个移动应用、网站应用和公众账号，获取用户信息后用户信息中的openid可能不同，但是unionid是相同的，可以通过unionid区分用户。所以可以在三方用户表中多加一个字段来存放unionid或者openid。")],-1),P=s("h1",{id:"附录",tabindex:"-1"},[t("附录 "),s("a",{class:"header-anchor",href:"#附录","aria-label":'Permalink to "附录"'},"​")],-1),w=s("ol",null,[s("li",null,[t("微信网页授权登录文档："),s("a",{href:"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html",target:"_blank",rel:"noreferrer"},"地址")]),s("li",null,[t("微信测试号申请地址："),s("a",{href:"https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login",target:"_blank",rel:"noreferrer"},"地址")]),s("li",null,[t("Security OAuth2 Client文档地址："),s("a",{href:"https://docs.spring.io/spring-security/reference/servlet/oauth2/index.html",target:"_blank",rel:"noreferrer"},"地址")])],-1);function z(i,x,U,M,N,I){const k=g,l=y("ClientOnly");return h(),C("div",null,[v,p(l,null,{default:e(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(h(),r(k,{key:0,article:i.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),b,R,_,p(l,null,{default:e(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(h(),r(k,{key:0,article:i.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),T,p(l,null,{default:e(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(h(),r(k,{key:0,article:i.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),f,p(l,null,{default:e(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(h(),r(k,{key:0,article:i.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),O,p(l,null,{default:e(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(h(),r(k,{key:0,article:i.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),S,P,p(l,null,{default:e(()=>{var a,n;return[(((a=i.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=i.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(h(),r(k,{key:0,article:i.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),w])}const G=D(q,[["render",z]]);export{L as __pageData,G as default};
