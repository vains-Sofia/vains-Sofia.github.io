<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>待办列表</title>
    <link href="/vains-Sofia/2022/05/12/todo/"/>
    <url>/vains-Sofia/2022/05/12/todo/</url>
    
    <content type="html"><![CDATA[<h1 id="待办列表"><a href="#待办列表" class="headerlink" title="待办列表"></a>待办列表</h1><ul><li><p><input checked="" disabled="" type="checkbox"> 认证服务刷新token接口生成新token时添加权限信息</p></li><li><p><input checked="" disabled="" type="checkbox"> <del>认证服务器通过feign调用的接口只能通过添加特定请求头访问</del><strong>服务之间互相调用改为客户端模式获取token</strong></p></li><li><p><input checked="" disabled="" type="checkbox"> 网关添加验证token是否已撤销验证(过滤器&#x2F;拦截器)，<strong>注：已添加至公共资源服务器模块</strong></p></li><li><p><input checked="" disabled="" type="checkbox"> Nacos配置文件整理</p></li><li><p><input checked="" disabled="" type="checkbox"> 认证服务器Jwks配置使用Jdk生成的jwks</p></li><li><p><input checked="" disabled="" type="checkbox"> Swagger3集成oauth2登录，可直接在Swagger中登录(<strong>参考：<a href="https://blog.csdn.net/GrayBar/article/details/122348297">Swagger3配置oauth2</a></strong>)</p></li><li><p><input checked="" disabled="" type="checkbox"> 密码模式登陆实现</p></li><li><p><input checked="" disabled="" type="checkbox"> 打包时分离出单独的lib包，方便部署更新(<strong>参考：<a href="https://www.cnblogs.com/huangjinyong/p/16009704.html">Springboot 打jar包实现分离依赖lib和配置 </a></strong>)</p></li><li><p><input checked="" disabled="" type="checkbox"> 全局异常处理实现，gateway的异常需要单独添加(common中根据条件加载)</p></li><li><p><input checked="" disabled="" type="checkbox"> 用户模块提供给认证服务的用户信息接口完善</p></li><li><p><input checked="" disabled="" type="checkbox"> authorization服务中SecurityFilter过滤链中添加corsFilter</p></li><li><p><input checked="" disabled="" type="checkbox"> common项目中的Swagger配置的认证方式改为授权码模式</p></li><li><p><input checked="" disabled="" type="checkbox"> 添加validation对入参进行校验</p></li><li><p><input checked="" disabled="" type="checkbox"> 升级Spring authorization server的版本为0.3.0</p></li><li><p><input checked="" disabled="" type="checkbox"> 自定义登录页面美化</p></li><li><p><input checked="" disabled="" type="checkbox"> 自定义RegisteredClientRepository，实现增删改查</p></li><li><p><input checked="" disabled="" type="checkbox"> 移除密码模式</p></li><li><p><input disabled="" type="checkbox"> 自定义授权确认页面汉化</p></li><li><p><input disabled="" type="checkbox"> 升级Spring authorization server的版本为0.3.1</p></li><li><p><input disabled="" type="checkbox"> <del>验证码模式登陆实现</del></p></li><li><p><input disabled="" type="checkbox"> GitHub登陆用户持久化</p></li></ul><h1 id="AuthorizationServer各接口"><a href="#AuthorizationServer各接口" class="headerlink" title="AuthorizationServer各接口"></a>AuthorizationServer各接口</h1><h3 id="测试接口"><a href="#测试接口" class="headerlink" title="测试接口"></a><a href="http://f72e1293a051.c.methodot.com:33184/system/test/test02">测试接口</a></h3><blockquote><p><a href="http://f72e1293a051.c.methodot.com:33184/system/test/test02">http://f72e1293a051.c.methodot.com:33184/system/test/test02</a></p></blockquote><h3 id="code换取token-Basic-auth"><a href="#code换取token-Basic-auth" class="headerlink" title="code换取token(Basic auth)"></a>code换取token(Basic auth)</h3><blockquote><p><a href="http://authorization-server/oauth2/token?code=AUTHORIZATION_CODE&amp;grant_type=authorization_code&amp;redirect_uri=http://f72e1293a051.c.methodot.com:33184/code/redirect">http://authorization-server/oauth2/token?code=AUTHORIZATION_CODE&amp;grant_type=authorization_code&amp;redirect_uri=http://f72e1293a051.c.methodot.com:33184/code/redirect</a></p></blockquote><h3 id="撤销Token-Basic-auth"><a href="#撤销Token-Basic-auth" class="headerlink" title="撤销Token(Basic auth)"></a>撤销Token(Basic auth)</h3><blockquote><p><a href="http://authorization-server/oauth2/revoke?token=ACCESS_TOKEN">http://authorization-server/oauth2/revoke?token=ACCESS_TOKEN</a></p></blockquote><h3 id="Token自省接口-Basic-auth"><a href="#Token自省接口-Basic-auth" class="headerlink" title="Token自省接口(Basic auth)"></a>Token自省接口(Basic auth)</h3><blockquote><p><a href="http://authorization-server/oauth2/introspect?token=ACCESS_TOKEN">http://authorization-server/oauth2/introspect?token=ACCESS_TOKEN</a></p></blockquote><h3 id="刷新Token-Basic-auth"><a href="#刷新Token-Basic-auth" class="headerlink" title="刷新Token(Basic auth)"></a>刷新Token(Basic auth)</h3><blockquote><p><a href="http://authorization-server/oauth2/token?grant_type=refresh_token&amp;refresh_token=REFRESH_TOKEN">http://authorization-server/oauth2/token?grant_type=refresh_token&amp;refresh_token=REFRESH_TOKEN</a></p></blockquote><h3 id="密码模式获取Token-客户端设置的认证类型"><a href="#密码模式获取Token-客户端设置的认证类型" class="headerlink" title="密码模式获取Token(客户端设置的认证类型)"></a><del>密码模式获取Token(客户端设置的认证类型)</del></h3><blockquote><p><del><a href="http://authorization-server/oauth2/token?username=123&amp;password=123456&amp;grant_type=password&amp;scope=user.userInfo">http://authorization-server/oauth2/token?username=123&amp;password=123456&amp;grant_type=password&amp;scope=user.userInfo</a></del></p></blockquote><h3 id="PKCE-Proof-Key-for-Code-Exchange-方式获取token-Basic-auth"><a href="#PKCE-Proof-Key-for-Code-Exchange-方式获取token-Basic-auth" class="headerlink" title="PKCE(Proof Key for Code Exchange)方式获取token(Basic auth)"></a>PKCE(Proof Key for Code Exchange)方式获取token(Basic auth)</h3><blockquote><p>认证URL：<a href="http://authorization-server/oauth2/authorize?client_id=admin&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;code_challenge=CODE_CHALLENGE&amp;code_challenge_method=S256&amp;scope=SCOPE&amp;state=STATE">http://authorization-server/oauth2/authorize?client_id=admin&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;code_challenge=CODE_CHALLENGE&amp;code_challenge_method=S256&amp;scope=SCOPE&amp;state=STATE</a></p></blockquote><blockquote><p>访问成功跳转至Redirect_Uri中，在Redirect_Uri中请求: <a href="http://127.0.0.1:5000/oauth2/token?code_verifier=CODE_VERIFIER&amp;code=CODE&amp;grant_type=authorization_code&amp;redirect_uri=REDIRECT_URI&amp;state=STATE">http://127.0.0.1:5000/oauth2/token?code_verifier=CODE_VERIFIER&amp;code=CODE&amp;grant_type=authorization_code&amp;redirect_uri=REDIRECT_URI&amp;state=STATE</a></p></blockquote><h4 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h4><blockquote><ol><li>client_id: 客户端的id</li><li>client_secret: 客户端秘钥</li><li>redirect_uri：申请授权成功后的回调地址</li><li>response_type：授权码模式固定参数：code</li><li>code_verifier：一段随机字符串</li><li>code_challenge：根据指定的加密方式将code_verifier加密后得到的字符串</li><li>code_challenge_method：加密方式</li><li>scope：客户端申请的授权范围</li><li>state：跟随authCode原样返回，防止CSRF攻击</li><li>grant_type：指定获取token 的方式：<ol><li>refresh_token：刷新token</li><li>authorization_code：根据授权码模式的授权码获取</li><li>password：密码模式获取</li></ol></li></ol></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>Spring Authorization Server</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/vains-Sofia/2022/05/12/hello-world/"/>
    <url>/vains-Sofia/2022/05/12/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
